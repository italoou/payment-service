# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

jobs:
  Build:

    runs-on: ubuntu-latest
    environment:
      name: env
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package --file pom.xml 
      
  Deploy:
  
    needs: Build
  
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: env
      
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          project_id: ${{ env.PROJECT_ID }}
          
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: payment-cluster
          location: us-central1
          
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Build with Maven
        run: mvn -B package --file pom.xml 
          
      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .
          
      - name: Configure Docker Client
        run: |
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker southamerica-east1-docker.pkg.dev --quiet
          
      - name: Push Docker Image to Container Registry
        env:
          GIT_TAG: v0.1.0
        run: |
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          
      - name: Update deployment
        run: |
          cd k8s
          kubectl delete -f services.yaml
          kubectl apply -f services.yaml
          kubectl apply -f deployment.yaml
          kubectl rollout restart deployment payment-api
        
